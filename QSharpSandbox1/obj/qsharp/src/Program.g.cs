//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"TypeConstructor\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPair\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"key\"]},\"Type\":{\"Case\":\"String\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":1}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"value\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":1},\"Item2\":{\"Line\":1,\"Column\":1}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPair\",\"Range\":{\"Case\":\"Null\"}}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":true}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":true}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPair\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: TypeDeclaration("{\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPair\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":8,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":9},\"Item2\":{\"Line\":1,\"Column\":22}},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"Int\"}]]},\"TypeItems\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"key\",\"Type\":{\"Case\":\"String\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":26},\"Item2\":{\"Line\":1,\"Column\":29}}}]}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"Case\":\"Named\",\"Fields\":[{\"VariableName\":\"value\",\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":44}}}]}]}]]},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"PrintForEach\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"list\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"TypeParameter\",\"Fields\":[{\"Origin\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"PrintForEach\"},\"TypeName\":\"T\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":35}}]}}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":31}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"fun\"]},\"Type\":{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"TypeParameter\",\"Fields\":[{\"Origin\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"PrintForEach\"},\"TypeName\":\"T\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":47}}]}}]},{\"Case\":\"String\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":42}}}]}]]},\"Signature\":{\"TypeParameters\":[{\"Case\":\"ValidName\",\"Fields\":[\"T\"]}],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"TypeParameter\",\"Fields\":[{\"Origin\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"PrintForEach\"},\"TypeName\":\"T\",\"Range\":{\"Case\":\"Null\"}}]}]},{\"Case\":\"Function\",\"Fields\":[{\"Case\":\"TypeParameter\",\"Fields\":[{\"Origin\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"PrintForEach\"},\"TypeName\":\"T\",\"Range\":{\"Case\":\"Null\"}}]},{\"Case\":\"String\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"PrintForEach\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPairAsString\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"pair\"]},\"Type\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPair\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":38},\"Item2\":{\"Line\":1,\"Column\":51}}]}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":36}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UserDefinedType\",\"Fields\":[{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPair\",\"Range\":{\"Case\":\"Null\"}}]},\"ReturnType\":{\"Case\":\"String\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"StringIntPairAsString\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":16,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"MeasureOneQubit\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":20,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Result\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"MeasureOneQubit\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":20,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"GenerateRandomNumberWithBitPlaces\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":44}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"bits\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":45},\"Item2\":{\"Line\":1,\"Column\":49}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"GenerateRandomNumberWithBitPlaces\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":44}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"EqualsNumber\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"num\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":26}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"numToMatch\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":33},\"Item2\":{\"Line\":1,\"Column\":43}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"EqualsNumber\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"IntArrayAsString\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":44,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"arr\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":30}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"ReturnType\":{\"Case\":\"String\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"IntArrayAsString\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":44,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"HelloQ\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":53,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":54,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Quantum.QSharpSandbox1\",\"Name\":\"HelloQ\"},\"Attributes\":[],\"SourceFile\":\"C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs\",\"Position\":{\"Item1\":54,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
#line hidden
namespace Quantum.QSharpSandbox1
{
    public class StringIntPair : UDTBase<(String,Int64)>, IApplyData
    {
        public StringIntPair() : base(default((String,Int64)))
        {
        }

        public StringIntPair((String,Int64) data) : base(data)
        {
        }

        public String key => Data.Item1;
        public Int64 value => Data.Item2;
        public String Item1 => Data.Item1;
        public Int64 Item2 => Data.Item2;
        System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        public void Deconstruct(out String item1, out Int64 item2)
        {
            item1 = Data.Item1;
            item2 = Data.Item2;
        }
    }

    [SourceLocation("C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs", OperationFunctor.Body, 11, 17)]
    public partial class PrintForEach<__T__> : Function<(IQArray<__T__>,ICallable), QVoid>, ICallable
    {
        public PrintForEach(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<__T__>,ICallable)>, IApplyData
        {
            public In((IQArray<__T__>,ICallable) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "PrintForEach";
        String ICallable.FullName => "Quantum.QSharpSandbox1.PrintForEach";
        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        public override Func<(IQArray<__T__>,ICallable), QVoid> Body => (__in__) =>
        {
            var (list,fun) = __in__;
#line 12 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            foreach (var item in list)
#line hidden
            {
#line 13 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                MicrosoftQuantumIntrinsicMessage.Apply(fun.Apply<String>(item));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __dataIn((IQArray<__T__>,ICallable) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<__T__> list, ICallable fun)
        {
            return __m__.Run<PrintForEach<__T__>, (IQArray<__T__>,ICallable), QVoid>((list, fun));
        }
    }

    [SourceLocation("C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs", OperationFunctor.Body, 17, 21)]
    public partial class StringIntPairAsString : Function<StringIntPair, String>, ICallable
    {
        public StringIntPairAsString(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "StringIntPairAsString";
        String ICallable.FullName => "Quantum.QSharpSandbox1.StringIntPairAsString";
        protected ICallable<Int64, String> MicrosoftQuantumConvertIntAsString
        {
            get;
            set;
        }

        public override Func<StringIntPair, String> Body => (__in__) =>
        {
            var pair = __in__;
#line 18 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            return ((pair.key + " ") + MicrosoftQuantumConvertIntAsString.Apply(pair.value));
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumConvertIntAsString = this.Factory.Get<ICallable<Int64, String>>(typeof(Microsoft.Quantum.Convert.IntAsString));
        }

        public override IApplyData __dataIn(StringIntPair data) => data;
        public override IApplyData __dataOut(String data) => new QTuple<String>(data);
        public static System.Threading.Tasks.Task<String> Run(IOperationFactory __m__, StringIntPair pair)
        {
            return __m__.Run<StringIntPairAsString, StringIntPair, String>(pair);
        }
    }

    [SourceLocation("C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs", OperationFunctor.Body, 21, 32)]
    public partial class MeasureOneQubit : Operation<QVoid, Result>, ICallable
    {
        public MeasureOneQubit(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "MeasureOneQubit";
        String ICallable.FullName => "Quantum.QSharpSandbox1.MeasureOneQubit";
        protected Allocate Allocate
        {
            get;
            set;
        }

        protected Release Release
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        public override Func<QVoid, Result> Body => (__in__) =>
        {
#line hidden
            {
#line 22 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                var qubit = Allocate.Apply();
#line hidden
                bool __arg1__ = true;
                try
                {
#line 23 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                    MicrosoftQuantumIntrinsicH.Apply(qubit);
#line 24 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                    var result = MicrosoftQuantumIntrinsicM.Apply(qubit);
#line 25 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                    if ((result == Result.One))
                    {
#line 26 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                        MicrosoftQuantumIntrinsicX.Apply(qubit);
                    }

#line 28 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                    return result;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release.Apply(qubit);
                    }
                }
            }
        }

        ;
        public override void Init()
        {
            this.Allocate = this.Factory.Get<Allocate>(typeof(Microsoft.Quantum.Intrinsic.Allocate));
            this.Release = this.Factory.Get<Release>(typeof(Microsoft.Quantum.Intrinsic.Release));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(Result data) => new QTuple<Result>(data);
        public static System.Threading.Tasks.Task<Result> Run(IOperationFactory __m__)
        {
            return __m__.Run<MeasureOneQubit, QVoid, Result>(QVoid.Instance);
        }
    }

    [SourceLocation("C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs", OperationFunctor.Body, 32, 41)]
    public partial class GenerateRandomNumberWithBitPlaces : Operation<Int64, Int64>, ICallable
    {
        public GenerateRandomNumberWithBitPlaces(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "GenerateRandomNumberWithBitPlaces";
        String ICallable.FullName => "Quantum.QSharpSandbox1.GenerateRandomNumberWithBitPlaces";
        protected ICallable<QVoid, Result> MeasureOneQubit
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, Int64> MicrosoftQuantumConvertResultArrayAsInt
        {
            get;
            set;
        }

        public override Func<Int64, Int64> Body => (__in__) =>
        {
            var bits = __in__;
#line 33 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            var arr = QArray<Result>.Create(0L);
#line 34 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            foreach (var i in new QRange(0L, 1L, bits))
#line hidden
            {
#line 35 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                var result = MeasureOneQubit.Apply(QVoid.Instance);
#line 36 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                arr = QArray<Result>.Add(arr, new QArray<Result>(result));
            }

#line 38 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            return MicrosoftQuantumConvertResultArrayAsInt.Apply(arr?.Copy());
        }

        ;
        public override void Init()
        {
            this.MeasureOneQubit = this.Factory.Get<ICallable<QVoid, Result>>(typeof(MeasureOneQubit));
            this.MicrosoftQuantumConvertResultArrayAsInt = this.Factory.Get<ICallable<IQArray<Result>, Int64>>(typeof(Microsoft.Quantum.Convert.ResultArrayAsInt));
        }

        public override IApplyData __dataIn(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __dataOut(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Int64 bits)
        {
            return __m__.Run<GenerateRandomNumberWithBitPlaces, Int64, Int64>(bits);
        }
    }

    [SourceLocation("C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs", OperationFunctor.Body, 41, 45)]
    public partial class EqualsNumber : Function<(Int64,Int64), Boolean>, ICallable
    {
        public EqualsNumber(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "EqualsNumber";
        String ICallable.FullName => "Quantum.QSharpSandbox1.EqualsNumber";
        public override Func<(Int64,Int64), Boolean> Body => (__in__) =>
        {
            var (num,numToMatch) = __in__;
#line 42 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            return (num == numToMatch);
        }

        ;
        public override void Init()
        {
        }

        public override IApplyData __dataIn((Int64,Int64) data) => new In(data);
        public override IApplyData __dataOut(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, Int64 num, Int64 numToMatch)
        {
            return __m__.Run<EqualsNumber, (Int64,Int64), Boolean>((num, numToMatch));
        }
    }

    [SourceLocation("C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs", OperationFunctor.Body, 45, 55)]
    public partial class IntArrayAsString : Function<IQArray<Int64>, String>, ICallable
    {
        public IntArrayAsString(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IntArrayAsString";
        String ICallable.FullName => "Quantum.QSharpSandbox1.IntArrayAsString";
        protected ICallable<Int64, String> MicrosoftQuantumConvertIntAsString
        {
            get;
            set;
        }

        public override Func<IQArray<Int64>, String> Body => (__in__) =>
        {
            var arr = __in__;
#line 46 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            var joined = "";
#line 47 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            foreach (var i in arr)
#line hidden
            {
#line 48 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                joined = (joined + (MicrosoftQuantumConvertIntAsString.Apply(i) + ","));
            }

#line 50 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            return joined;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumConvertIntAsString = this.Factory.Get<ICallable<Int64, String>>(typeof(Microsoft.Quantum.Convert.IntAsString));
        }

        public override IApplyData __dataIn(IQArray<Int64> data) => data;
        public override IApplyData __dataOut(String data) => new QTuple<String>(data);
        public static System.Threading.Tasks.Task<String> Run(IOperationFactory __m__, IQArray<Int64> arr)
        {
            return __m__.Run<IntArrayAsString, IQArray<Int64>, String>(arr);
        }
    }

    [SourceLocation("C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs", OperationFunctor.Body, 55, -1)]
    public partial class HelloQ : Operation<QVoid, QVoid>, ICallable
    {
        public HelloQ(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "HelloQ";
        String ICallable.FullName => "Quantum.QSharpSandbox1.HelloQ";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(HelloQ));
        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        protected ICallable<(String,Int64), StringIntPair> StringIntPair
        {
            get;
            set;
        }

        protected ICallable PrintForEach
        {
            get;
            set;
        }

        protected ICallable<StringIntPair, String> StringIntPairAsString
        {
            get;
            set;
        }

        protected ICallable<Int64, Int64> GenerateRandomNumberWithBitPlaces
        {
            get;
            set;
        }

        protected ICallable MicrosoftQuantumArraysAny
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Boolean> EqualsNumber
        {
            get;
            set;
        }

        protected ICallable Length
        {
            get;
            set;
        }

        protected ICallable<IQArray<Int64>, String> IntArrayAsString
        {
            get;
            set;
        }

        protected ICallable<Int64, String> MicrosoftQuantumConvertIntAsString
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> Body => (__in__) =>
        {
#line 57 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            MicrosoftQuantumIntrinsicMessage.Apply("> Just some printed pairs");
#line 58 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            var arr = (IQArray<StringIntPair>)new QArray<StringIntPair>(new StringIntPair(("Ten", 10L)), new StringIntPair(("Twenty", 20L)), new StringIntPair(("Thirty", 30L)));
#line 63 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            PrintForEach.Apply((arr, StringIntPairAsString));
#line 67 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            MicrosoftQuantumIntrinsicMessage.Apply("> Numbers generated by superpositioned qubits");
#line 68 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            var randomNumbers = QArray<Int64>.Create(0L);
#line 69 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            var counter = 0L;
#line 70 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            while (true)
            {
#line 71 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                var randomNumber = GenerateRandomNumberWithBitPlaces.Apply(5L);
#line 72 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                var isNumberPresent = MicrosoftQuantumArraysAny.Apply<Boolean>((EqualsNumber.Partial(new Func<Int64, (Int64,Int64)>((__arg1__) => (__arg1__, randomNumber))), randomNumbers?.Copy()));
#line 73 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                if (!(isNumberPresent))
                {
#line 74 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                    randomNumbers = QArray<Int64>.Add(randomNumbers, new QArray<Int64>(randomNumber));
                }

#line 76 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
                counter = (counter + 1L);
                if ((randomNumbers.Length > 5L))
                {
                    break;
                }
                else
                {
                }
            }

#line 81 "C:/Users/Frithjof%20Hoppe/source/repos/QSharpSandbox1/QSharpSandbox1/Program.qs"
            MicrosoftQuantumIntrinsicMessage.Apply((((IntArrayAsString.Apply(randomNumbers?.Copy()) + " with ") + MicrosoftQuantumConvertIntAsString.Apply(counter)) + " cycles"));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
            this.StringIntPair = this.Factory.Get<ICallable<(String,Int64), StringIntPair>>(typeof(StringIntPair));
            this.PrintForEach = this.Factory.Get<ICallable>(typeof(PrintForEach<>));
            this.StringIntPairAsString = this.Factory.Get<ICallable<StringIntPair, String>>(typeof(StringIntPairAsString));
            this.GenerateRandomNumberWithBitPlaces = this.Factory.Get<ICallable<Int64, Int64>>(typeof(GenerateRandomNumberWithBitPlaces));
            this.MicrosoftQuantumArraysAny = this.Factory.Get<ICallable>(typeof(Microsoft.Quantum.Arrays.Any<>));
            this.EqualsNumber = this.Factory.Get<ICallable<(Int64,Int64), Boolean>>(typeof(EqualsNumber));
            this.Length = this.Factory.Get<ICallable>(typeof(Microsoft.Quantum.Core.Length<>));
            this.IntArrayAsString = this.Factory.Get<ICallable<IQArray<Int64>, String>>(typeof(IntArrayAsString));
            this.MicrosoftQuantumConvertIntAsString = this.Factory.Get<ICallable<Int64, String>>(typeof(Microsoft.Quantum.Convert.IntAsString));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<HelloQ, QVoid, QVoid>(QVoid.Instance);
        }
    }
}